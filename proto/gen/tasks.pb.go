// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: proto/tasks.proto

package tasks

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NotificationPriority enum for notification urgency
type NotificationPriority int32

const (
	NotificationPriority_NOTIFICATION_PRIORITY_UNSPECIFIED NotificationPriority = 0
	NotificationPriority_NOTIFICATION_PRIORITY_LOW         NotificationPriority = 1
	NotificationPriority_NOTIFICATION_PRIORITY_NORMAL      NotificationPriority = 2
	NotificationPriority_NOTIFICATION_PRIORITY_HIGH        NotificationPriority = 3
	NotificationPriority_NOTIFICATION_PRIORITY_URGENT      NotificationPriority = 4
)

// Enum value maps for NotificationPriority.
var (
	NotificationPriority_name = map[int32]string{
		0: "NOTIFICATION_PRIORITY_UNSPECIFIED",
		1: "NOTIFICATION_PRIORITY_LOW",
		2: "NOTIFICATION_PRIORITY_NORMAL",
		3: "NOTIFICATION_PRIORITY_HIGH",
		4: "NOTIFICATION_PRIORITY_URGENT",
	}
	NotificationPriority_value = map[string]int32{
		"NOTIFICATION_PRIORITY_UNSPECIFIED": 0,
		"NOTIFICATION_PRIORITY_LOW":         1,
		"NOTIFICATION_PRIORITY_NORMAL":      2,
		"NOTIFICATION_PRIORITY_HIGH":        3,
		"NOTIFICATION_PRIORITY_URGENT":      4,
	}
)

func (x NotificationPriority) Enum() *NotificationPriority {
	p := new(NotificationPriority)
	*p = x
	return p
}

func (x NotificationPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tasks_proto_enumTypes[0].Descriptor()
}

func (NotificationPriority) Type() protoreflect.EnumType {
	return &file_proto_tasks_proto_enumTypes[0]
}

func (x NotificationPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationPriority.Descriptor instead.
func (NotificationPriority) EnumDescriptor() ([]byte, []int) {
	return file_proto_tasks_proto_rawDescGZIP(), []int{0}
}

// GenericTask represents a flexible task with key-value data
type GenericTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskType      string                 `protobuf:"bytes,2,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	Data          map[string]string      `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Priority      int32                  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenericTask) Reset() {
	*x = GenericTask{}
	mi := &file_proto_tasks_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenericTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericTask) ProtoMessage() {}

func (x *GenericTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tasks_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericTask.ProtoReflect.Descriptor instead.
func (*GenericTask) Descriptor() ([]byte, []int) {
	return file_proto_tasks_proto_rawDescGZIP(), []int{0}
}

func (x *GenericTask) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *GenericTask) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *GenericTask) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GenericTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GenericTask) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *GenericTask) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// EmailTask represents a task to send an email
type EmailTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	To            string                 `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Cc            []string               `protobuf:"bytes,2,rep,name=cc,proto3" json:"cc,omitempty"`
	Bcc           []string               `protobuf:"bytes,3,rep,name=bcc,proto3" json:"bcc,omitempty"`
	From          string                 `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	Subject       string                 `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	BodyText      string                 `protobuf:"bytes,6,opt,name=body_text,json=bodyText,proto3" json:"body_text,omitempty"`
	BodyHtml      string                 `protobuf:"bytes,7,opt,name=body_html,json=bodyHtml,proto3" json:"body_html,omitempty"`
	Attachments   []*Attachment          `protobuf:"bytes,8,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,9,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ScheduledFor  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=scheduled_for,json=scheduledFor,proto3" json:"scheduled_for,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmailTask) Reset() {
	*x = EmailTask{}
	mi := &file_proto_tasks_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailTask) ProtoMessage() {}

func (x *EmailTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tasks_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailTask.ProtoReflect.Descriptor instead.
func (*EmailTask) Descriptor() ([]byte, []int) {
	return file_proto_tasks_proto_rawDescGZIP(), []int{1}
}

func (x *EmailTask) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *EmailTask) GetCc() []string {
	if x != nil {
		return x.Cc
	}
	return nil
}

func (x *EmailTask) GetBcc() []string {
	if x != nil {
		return x.Bcc
	}
	return nil
}

func (x *EmailTask) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *EmailTask) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EmailTask) GetBodyText() string {
	if x != nil {
		return x.BodyText
	}
	return ""
}

func (x *EmailTask) GetBodyHtml() string {
	if x != nil {
		return x.BodyHtml
	}
	return ""
}

func (x *EmailTask) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *EmailTask) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *EmailTask) GetScheduledFor() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledFor
	}
	return nil
}

// Attachment represents an email attachment
type Attachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	mi := &file_proto_tasks_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tasks_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_proto_tasks_proto_rawDescGZIP(), []int{2}
}

func (x *Attachment) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Attachment) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Attachment) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Attachment) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// WebhookTask represents a task to call a webhook
type WebhookTask struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Url            string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Method         string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"` // GET, POST, PUT, DELETE, PATCH
	Headers        map[string]string      `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Payload        []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	TimeoutSeconds int32                  `protobuf:"varint,5,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	MaxRetries     int32                  `protobuf:"varint,6,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	VerifySsl      bool                   `protobuf:"varint,7,opt,name=verify_ssl,json=verifySsl,proto3" json:"verify_ssl,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WebhookTask) Reset() {
	*x = WebhookTask{}
	mi := &file_proto_tasks_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebhookTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookTask) ProtoMessage() {}

func (x *WebhookTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tasks_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookTask.ProtoReflect.Descriptor instead.
func (*WebhookTask) Descriptor() ([]byte, []int) {
	return file_proto_tasks_proto_rawDescGZIP(), []int{3}
}

func (x *WebhookTask) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *WebhookTask) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *WebhookTask) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *WebhookTask) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *WebhookTask) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *WebhookTask) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *WebhookTask) GetVerifySsl() bool {
	if x != nil {
		return x.VerifySsl
	}
	return false
}

func (x *WebhookTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// DataProcessingTask represents a task to process data
type DataProcessingTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operation     string                 `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"` // transform, aggregate, filter, etc.
	InputData     []byte                 `protobuf:"bytes,2,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	OutputFormat  string                 `protobuf:"bytes,4,opt,name=output_format,json=outputFormat,proto3" json:"output_format,omitempty"` // json, csv, xml, etc.
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Options       *ProcessingOptions     `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataProcessingTask) Reset() {
	*x = DataProcessingTask{}
	mi := &file_proto_tasks_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataProcessingTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataProcessingTask) ProtoMessage() {}

func (x *DataProcessingTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tasks_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataProcessingTask.ProtoReflect.Descriptor instead.
func (*DataProcessingTask) Descriptor() ([]byte, []int) {
	return file_proto_tasks_proto_rawDescGZIP(), []int{4}
}

func (x *DataProcessingTask) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *DataProcessingTask) GetInputData() []byte {
	if x != nil {
		return x.InputData
	}
	return nil
}

func (x *DataProcessingTask) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *DataProcessingTask) GetOutputFormat() string {
	if x != nil {
		return x.OutputFormat
	}
	return ""
}

func (x *DataProcessingTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DataProcessingTask) GetOptions() *ProcessingOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// ProcessingOptions contains configuration for data processing
type ProcessingOptions struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BatchSize      int32                  `protobuf:"varint,1,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	Parallel       bool                   `protobuf:"varint,2,opt,name=parallel,proto3" json:"parallel,omitempty"`
	MaxWorkers     int32                  `protobuf:"varint,3,opt,name=max_workers,json=maxWorkers,proto3" json:"max_workers,omitempty"`
	TimeoutSeconds int32                  `protobuf:"varint,4,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	ValidateOutput bool                   `protobuf:"varint,5,opt,name=validate_output,json=validateOutput,proto3" json:"validate_output,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProcessingOptions) Reset() {
	*x = ProcessingOptions{}
	mi := &file_proto_tasks_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingOptions) ProtoMessage() {}

func (x *ProcessingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tasks_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingOptions.ProtoReflect.Descriptor instead.
func (*ProcessingOptions) Descriptor() ([]byte, []int) {
	return file_proto_tasks_proto_rawDescGZIP(), []int{5}
}

func (x *ProcessingOptions) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *ProcessingOptions) GetParallel() bool {
	if x != nil {
		return x.Parallel
	}
	return false
}

func (x *ProcessingOptions) GetMaxWorkers() int32 {
	if x != nil {
		return x.MaxWorkers
	}
	return 0
}

func (x *ProcessingOptions) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *ProcessingOptions) GetValidateOutput() bool {
	if x != nil {
		return x.ValidateOutput
	}
	return false
}

// NotificationTask represents a task to send a notification
type NotificationTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecipientId   string                 `protobuf:"bytes,1,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	Channel       string                 `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"` // email, sms, push, slack, etc.
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Priority      NotificationPriority   `protobuf:"varint,6,opt,name=priority,proto3,enum=bananas.tasks.NotificationPriority" json:"priority,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationTask) Reset() {
	*x = NotificationTask{}
	mi := &file_proto_tasks_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationTask) ProtoMessage() {}

func (x *NotificationTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tasks_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationTask.ProtoReflect.Descriptor instead.
func (*NotificationTask) Descriptor() ([]byte, []int) {
	return file_proto_tasks_proto_rawDescGZIP(), []int{6}
}

func (x *NotificationTask) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *NotificationTask) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *NotificationTask) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotificationTask) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NotificationTask) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *NotificationTask) GetPriority() NotificationPriority {
	if x != nil {
		return x.Priority
	}
	return NotificationPriority_NOTIFICATION_PRIORITY_UNSPECIFIED
}

func (x *NotificationTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// BatchTask represents a task to process multiple items in batch
type BatchTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchId       string                 `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Items         []*BatchItem           `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Operation     string                 `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`
	Concurrency   int32                  `protobuf:"varint,4,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Options       *BatchOptions          `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchTask) Reset() {
	*x = BatchTask{}
	mi := &file_proto_tasks_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchTask) ProtoMessage() {}

func (x *BatchTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tasks_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchTask.ProtoReflect.Descriptor instead.
func (*BatchTask) Descriptor() ([]byte, []int) {
	return file_proto_tasks_proto_rawDescGZIP(), []int{7}
}

func (x *BatchTask) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *BatchTask) GetItems() []*BatchItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BatchTask) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *BatchTask) GetConcurrency() int32 {
	if x != nil {
		return x.Concurrency
	}
	return 0
}

func (x *BatchTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BatchTask) GetOptions() *BatchOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// BatchItem represents a single item in a batch
type BatchItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchItem) Reset() {
	*x = BatchItem{}
	mi := &file_proto_tasks_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchItem) ProtoMessage() {}

func (x *BatchItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tasks_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchItem.ProtoReflect.Descriptor instead.
func (*BatchItem) Descriptor() ([]byte, []int) {
	return file_proto_tasks_proto_rawDescGZIP(), []int{8}
}

func (x *BatchItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *BatchItem) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BatchItem) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// BatchOptions contains configuration for batch processing
type BatchOptions struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	StopOnError    bool                   `protobuf:"varint,1,opt,name=stop_on_error,json=stopOnError,proto3" json:"stop_on_error,omitempty"`
	ReturnResults  bool                   `protobuf:"varint,2,opt,name=return_results,json=returnResults,proto3" json:"return_results,omitempty"`
	TimeoutSeconds int32                  `protobuf:"varint,3,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	ResultFormat   string                 `protobuf:"bytes,4,opt,name=result_format,json=resultFormat,proto3" json:"result_format,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BatchOptions) Reset() {
	*x = BatchOptions{}
	mi := &file_proto_tasks_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchOptions) ProtoMessage() {}

func (x *BatchOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tasks_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchOptions.ProtoReflect.Descriptor instead.
func (*BatchOptions) Descriptor() ([]byte, []int) {
	return file_proto_tasks_proto_rawDescGZIP(), []int{9}
}

func (x *BatchOptions) GetStopOnError() bool {
	if x != nil {
		return x.StopOnError
	}
	return false
}

func (x *BatchOptions) GetReturnResults() bool {
	if x != nil {
		return x.ReturnResults
	}
	return false
}

func (x *BatchOptions) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *BatchOptions) GetResultFormat() string {
	if x != nil {
		return x.ResultFormat
	}
	return ""
}

// TaskResult represents the result of task execution
type TaskResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Output        []byte                 `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	DurationMs    int64                  `protobuf:"varint,6,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	Metrics       map[string]string      `protobuf:"bytes,7,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_proto_tasks_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tasks_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_proto_tasks_proto_rawDescGZIP(), []int{10}
}

func (x *TaskResult) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TaskResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *TaskResult) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *TaskResult) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *TaskResult) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *TaskResult) GetMetrics() map[string]string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// ScheduledTask represents a task to be executed at a future time
type ScheduledTask struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TaskId         string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ScheduledFor   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=scheduled_for,json=scheduledFor,proto3" json:"scheduled_for,omitempty"`
	CronExpression string                 `protobuf:"bytes,3,opt,name=cron_expression,json=cronExpression,proto3" json:"cron_expression,omitempty"` // Optional: for recurring tasks
	TaskPayload    []byte                 `protobuf:"bytes,4,opt,name=task_payload,json=taskPayload,proto3" json:"task_payload,omitempty"`
	TaskType       string                 `protobuf:"bytes,5,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	Recurring      bool                   `protobuf:"varint,6,opt,name=recurring,proto3" json:"recurring,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ScheduledTask) Reset() {
	*x = ScheduledTask{}
	mi := &file_proto_tasks_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduledTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledTask) ProtoMessage() {}

func (x *ScheduledTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tasks_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledTask.ProtoReflect.Descriptor instead.
func (*ScheduledTask) Descriptor() ([]byte, []int) {
	return file_proto_tasks_proto_rawDescGZIP(), []int{11}
}

func (x *ScheduledTask) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ScheduledTask) GetScheduledFor() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledFor
	}
	return nil
}

func (x *ScheduledTask) GetCronExpression() string {
	if x != nil {
		return x.CronExpression
	}
	return ""
}

func (x *ScheduledTask) GetTaskPayload() []byte {
	if x != nil {
		return x.TaskPayload
	}
	return nil
}

func (x *ScheduledTask) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *ScheduledTask) GetRecurring() bool {
	if x != nil {
		return x.Recurring
	}
	return false
}

func (x *ScheduledTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// TaskMetadata contains metadata about any task
type TaskMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskName      string                 `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	TaskType      string                 `protobuf:"bytes,3,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Attempts      int32                  `protobuf:"varint,6,opt,name=attempts,proto3" json:"attempts,omitempty"`
	MaxRetries    int32                  `protobuf:"varint,7,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	Status        string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskMetadata) Reset() {
	*x = TaskMetadata{}
	mi := &file_proto_tasks_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMetadata) ProtoMessage() {}

func (x *TaskMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tasks_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMetadata.ProtoReflect.Descriptor instead.
func (*TaskMetadata) Descriptor() ([]byte, []int) {
	return file_proto_tasks_proto_rawDescGZIP(), []int{12}
}

func (x *TaskMetadata) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskMetadata) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskMetadata) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskMetadata) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TaskMetadata) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *TaskMetadata) GetAttempts() int32 {
	if x != nil {
		return x.Attempts
	}
	return 0
}

func (x *TaskMetadata) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *TaskMetadata) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TaskMetadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

var File_proto_tasks_proto protoreflect.FileDescriptor

const file_proto_tasks_proto_rawDesc = "" +
	"\n" +
	"\x11proto/tasks.proto\x12\rbananas.tasks\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa1\x02\n" +
	"\vGenericTask\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_type\x18\x02 \x01(\tR\btaskType\x128\n" +
	"\x04data\x18\x03 \x03(\v2$.bananas.tasks.GenericTask.DataEntryR\x04data\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x05R\bpriority\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa0\x03\n" +
	"\tEmailTask\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\tR\x02to\x12\x0e\n" +
	"\x02cc\x18\x02 \x03(\tR\x02cc\x12\x10\n" +
	"\x03bcc\x18\x03 \x03(\tR\x03bcc\x12\x12\n" +
	"\x04from\x18\x04 \x01(\tR\x04from\x12\x18\n" +
	"\asubject\x18\x05 \x01(\tR\asubject\x12\x1b\n" +
	"\tbody_text\x18\x06 \x01(\tR\bbodyText\x12\x1b\n" +
	"\tbody_html\x18\a \x01(\tR\bbodyHtml\x12;\n" +
	"\vattachments\x18\b \x03(\v2\x19.bananas.tasks.AttachmentR\vattachments\x12?\n" +
	"\aheaders\x18\t \x03(\v2%.bananas.tasks.EmailTask.HeadersEntryR\aheaders\x12?\n" +
	"\rscheduled_for\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\fscheduledFor\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"s\n" +
	"\n" +
	"Attachment\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\"\xf4\x02\n" +
	"\vWebhookTask\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12A\n" +
	"\aheaders\x18\x03 \x03(\v2'.bananas.tasks.WebhookTask.HeadersEntryR\aheaders\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\x12'\n" +
	"\x0ftimeout_seconds\x18\x05 \x01(\x05R\x0etimeoutSeconds\x12\x1f\n" +
	"\vmax_retries\x18\x06 \x01(\x05R\n" +
	"maxRetries\x12\x1d\n" +
	"\n" +
	"verify_ssl\x18\a \x01(\bR\tverifySsl\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xff\x02\n" +
	"\x12DataProcessingTask\x12\x1c\n" +
	"\toperation\x18\x01 \x01(\tR\toperation\x12\x1d\n" +
	"\n" +
	"input_data\x18\x02 \x01(\fR\tinputData\x12Q\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v21.bananas.tasks.DataProcessingTask.ParametersEntryR\n" +
	"parameters\x12#\n" +
	"\routput_format\x18\x04 \x01(\tR\foutputFormat\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12:\n" +
	"\aoptions\x18\x06 \x01(\v2 .bananas.tasks.ProcessingOptionsR\aoptions\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc1\x01\n" +
	"\x11ProcessingOptions\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x01 \x01(\x05R\tbatchSize\x12\x1a\n" +
	"\bparallel\x18\x02 \x01(\bR\bparallel\x12\x1f\n" +
	"\vmax_workers\x18\x03 \x01(\x05R\n" +
	"maxWorkers\x12'\n" +
	"\x0ftimeout_seconds\x18\x04 \x01(\x05R\x0etimeoutSeconds\x12'\n" +
	"\x0fvalidate_output\x18\x05 \x01(\bR\x0evalidateOutput\"\x83\x03\n" +
	"\x10NotificationTask\x12!\n" +
	"\frecipient_id\x18\x01 \x01(\tR\vrecipientId\x12\x18\n" +
	"\achannel\x18\x02 \x01(\tR\achannel\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12I\n" +
	"\bmetadata\x18\x05 \x03(\v2-.bananas.tasks.NotificationTask.MetadataEntryR\bmetadata\x12?\n" +
	"\bpriority\x18\x06 \x01(\x0e2#.bananas.tasks.NotificationPriorityR\bpriority\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x88\x02\n" +
	"\tBatchTask\x12\x19\n" +
	"\bbatch_id\x18\x01 \x01(\tR\abatchId\x12.\n" +
	"\x05items\x18\x02 \x03(\v2\x18.bananas.tasks.BatchItemR\x05items\x12\x1c\n" +
	"\toperation\x18\x03 \x01(\tR\toperation\x12 \n" +
	"\vconcurrency\x18\x04 \x01(\x05R\vconcurrency\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x125\n" +
	"\aoptions\x18\x06 \x01(\v2\x1b.bananas.tasks.BatchOptionsR\aoptions\"\xb9\x01\n" +
	"\tBatchItem\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12B\n" +
	"\bmetadata\x18\x03 \x03(\v2&.bananas.tasks.BatchItem.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa7\x01\n" +
	"\fBatchOptions\x12\"\n" +
	"\rstop_on_error\x18\x01 \x01(\bR\vstopOnError\x12%\n" +
	"\x0ereturn_results\x18\x02 \x01(\bR\rreturnResults\x12'\n" +
	"\x0ftimeout_seconds\x18\x03 \x01(\x05R\x0etimeoutSeconds\x12#\n" +
	"\rresult_format\x18\x04 \x01(\tR\fresultFormat\"\xda\x02\n" +
	"\n" +
	"TaskResult\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12\x16\n" +
	"\x06output\x18\x04 \x01(\fR\x06output\x12=\n" +
	"\fcompleted_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x1f\n" +
	"\vduration_ms\x18\x06 \x01(\x03R\n" +
	"durationMs\x12@\n" +
	"\ametrics\x18\a \x03(\v2&.bananas.tasks.TaskResult.MetricsEntryR\ametrics\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xab\x02\n" +
	"\rScheduledTask\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12?\n" +
	"\rscheduled_for\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\fscheduledFor\x12'\n" +
	"\x0fcron_expression\x18\x03 \x01(\tR\x0ecronExpression\x12!\n" +
	"\ftask_payload\x18\x04 \x01(\fR\vtaskPayload\x12\x1b\n" +
	"\ttask_type\x18\x05 \x01(\tR\btaskType\x12\x1c\n" +
	"\trecurring\x18\x06 \x01(\bR\trecurring\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xa8\x03\n" +
	"\fTaskMetadata\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_name\x18\x02 \x01(\tR\btaskName\x12\x1b\n" +
	"\ttask_type\x18\x03 \x01(\tR\btaskType\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1a\n" +
	"\battempts\x18\x06 \x01(\x05R\battempts\x12\x1f\n" +
	"\vmax_retries\x18\a \x01(\x05R\n" +
	"maxRetries\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12?\n" +
	"\x06labels\x18\t \x03(\v2'.bananas.tasks.TaskMetadata.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xc0\x01\n" +
	"\x14NotificationPriority\x12%\n" +
	"!NOTIFICATION_PRIORITY_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19NOTIFICATION_PRIORITY_LOW\x10\x01\x12 \n" +
	"\x1cNOTIFICATION_PRIORITY_NORMAL\x10\x02\x12\x1e\n" +
	"\x1aNOTIFICATION_PRIORITY_HIGH\x10\x03\x12 \n" +
	"\x1cNOTIFICATION_PRIORITY_URGENT\x10\x04B1Z/github.com/muaviaUsmani/bananas/proto/gen;tasksb\x06proto3"

var (
	file_proto_tasks_proto_rawDescOnce sync.Once
	file_proto_tasks_proto_rawDescData []byte
)

func file_proto_tasks_proto_rawDescGZIP() []byte {
	file_proto_tasks_proto_rawDescOnce.Do(func() {
		file_proto_tasks_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_tasks_proto_rawDesc), len(file_proto_tasks_proto_rawDesc)))
	})
	return file_proto_tasks_proto_rawDescData
}

var file_proto_tasks_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_tasks_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_proto_tasks_proto_goTypes = []any{
	(NotificationPriority)(0),     // 0: bananas.tasks.NotificationPriority
	(*GenericTask)(nil),           // 1: bananas.tasks.GenericTask
	(*EmailTask)(nil),             // 2: bananas.tasks.EmailTask
	(*Attachment)(nil),            // 3: bananas.tasks.Attachment
	(*WebhookTask)(nil),           // 4: bananas.tasks.WebhookTask
	(*DataProcessingTask)(nil),    // 5: bananas.tasks.DataProcessingTask
	(*ProcessingOptions)(nil),     // 6: bananas.tasks.ProcessingOptions
	(*NotificationTask)(nil),      // 7: bananas.tasks.NotificationTask
	(*BatchTask)(nil),             // 8: bananas.tasks.BatchTask
	(*BatchItem)(nil),             // 9: bananas.tasks.BatchItem
	(*BatchOptions)(nil),          // 10: bananas.tasks.BatchOptions
	(*TaskResult)(nil),            // 11: bananas.tasks.TaskResult
	(*ScheduledTask)(nil),         // 12: bananas.tasks.ScheduledTask
	(*TaskMetadata)(nil),          // 13: bananas.tasks.TaskMetadata
	nil,                           // 14: bananas.tasks.GenericTask.DataEntry
	nil,                           // 15: bananas.tasks.EmailTask.HeadersEntry
	nil,                           // 16: bananas.tasks.WebhookTask.HeadersEntry
	nil,                           // 17: bananas.tasks.DataProcessingTask.ParametersEntry
	nil,                           // 18: bananas.tasks.NotificationTask.MetadataEntry
	nil,                           // 19: bananas.tasks.BatchItem.MetadataEntry
	nil,                           // 20: bananas.tasks.TaskResult.MetricsEntry
	nil,                           // 21: bananas.tasks.TaskMetadata.LabelsEntry
	(*timestamppb.Timestamp)(nil), // 22: google.protobuf.Timestamp
}
var file_proto_tasks_proto_depIdxs = []int32{
	14, // 0: bananas.tasks.GenericTask.data:type_name -> bananas.tasks.GenericTask.DataEntry
	22, // 1: bananas.tasks.GenericTask.created_at:type_name -> google.protobuf.Timestamp
	3,  // 2: bananas.tasks.EmailTask.attachments:type_name -> bananas.tasks.Attachment
	15, // 3: bananas.tasks.EmailTask.headers:type_name -> bananas.tasks.EmailTask.HeadersEntry
	22, // 4: bananas.tasks.EmailTask.scheduled_for:type_name -> google.protobuf.Timestamp
	16, // 5: bananas.tasks.WebhookTask.headers:type_name -> bananas.tasks.WebhookTask.HeadersEntry
	22, // 6: bananas.tasks.WebhookTask.created_at:type_name -> google.protobuf.Timestamp
	17, // 7: bananas.tasks.DataProcessingTask.parameters:type_name -> bananas.tasks.DataProcessingTask.ParametersEntry
	22, // 8: bananas.tasks.DataProcessingTask.created_at:type_name -> google.protobuf.Timestamp
	6,  // 9: bananas.tasks.DataProcessingTask.options:type_name -> bananas.tasks.ProcessingOptions
	18, // 10: bananas.tasks.NotificationTask.metadata:type_name -> bananas.tasks.NotificationTask.MetadataEntry
	0,  // 11: bananas.tasks.NotificationTask.priority:type_name -> bananas.tasks.NotificationPriority
	22, // 12: bananas.tasks.NotificationTask.created_at:type_name -> google.protobuf.Timestamp
	9,  // 13: bananas.tasks.BatchTask.items:type_name -> bananas.tasks.BatchItem
	22, // 14: bananas.tasks.BatchTask.created_at:type_name -> google.protobuf.Timestamp
	10, // 15: bananas.tasks.BatchTask.options:type_name -> bananas.tasks.BatchOptions
	19, // 16: bananas.tasks.BatchItem.metadata:type_name -> bananas.tasks.BatchItem.MetadataEntry
	22, // 17: bananas.tasks.TaskResult.completed_at:type_name -> google.protobuf.Timestamp
	20, // 18: bananas.tasks.TaskResult.metrics:type_name -> bananas.tasks.TaskResult.MetricsEntry
	22, // 19: bananas.tasks.ScheduledTask.scheduled_for:type_name -> google.protobuf.Timestamp
	22, // 20: bananas.tasks.ScheduledTask.created_at:type_name -> google.protobuf.Timestamp
	22, // 21: bananas.tasks.TaskMetadata.created_at:type_name -> google.protobuf.Timestamp
	22, // 22: bananas.tasks.TaskMetadata.updated_at:type_name -> google.protobuf.Timestamp
	21, // 23: bananas.tasks.TaskMetadata.labels:type_name -> bananas.tasks.TaskMetadata.LabelsEntry
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_proto_tasks_proto_init() }
func file_proto_tasks_proto_init() {
	if File_proto_tasks_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_tasks_proto_rawDesc), len(file_proto_tasks_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_tasks_proto_goTypes,
		DependencyIndexes: file_proto_tasks_proto_depIdxs,
		EnumInfos:         file_proto_tasks_proto_enumTypes,
		MessageInfos:      file_proto_tasks_proto_msgTypes,
	}.Build()
	File_proto_tasks_proto = out.File
	file_proto_tasks_proto_goTypes = nil
	file_proto_tasks_proto_depIdxs = nil
}
